

自动备份MySQL数据库
	- 1. 编辑可执行备份文件以.sh为扩展名（注意修改其中配置信息）
	- 2. 授权该文件可执行（chmod 777 xxx.sh）
	- 3. 在配置的指定位置（BCK_PATH）创建目录
	- 4. 编辑/etc/my.ini文件（vim /etc/my.ini），添加日志配置（log_bin=mysql-bin  换行  server-id=1 ），保存（ :wq ）
	- 5. 执行文件即可
	
	- 添加自动任务：
		- 1. 编辑/etc/crontab文件（vim /etc/crontab），添加任务（* * * * * user_name filepath）
			- Eg: * * * * * root /mysqlbackup/msback.sh（每分钟执行一次）
		- 2. 重启自动任务服务
			- 切换到/bin目录：systemctl restart crond
		- 关于自动任务的说明：
			- 1. 服务
				- 1.1 启动服务：systemctl start crond
				- 1.2 重启服务：systemctl restart crond
				- 1.3 查看状态：systemctl status crond
				- 1.4 设置开机启动：systemctl enable crond
			- 2. 语法
				- * * * * * user_name filepath
				- 第一个“*”：分钟（0-59）
				- 第二个“*”：小时（0-23）
				- 第三个“*”：日（1-31）
				- 第四个“*”：月（1-12）
				- 第五个“*”：周（0-6）
				- user_name: 用户名（系统中用户名称）
				- filepath：要执行的文件全路径
				- 注意：五个都为*是每分钟执行一次
			
			
##===Begin=====================================================================================================================================

#!/bin/bash
# Auto backup mysqldb
# Database Configuration
DB_USER="user01"
DB_PASS="user01123"
DB_HOST="localhost"
DB_NAME=("person" "city");

# Path Configuration
BIN_PATH="/usr/bin"
BCK_PATH="/home/mysqlbackup"

# Create file
#rm -rf $BCK_PATH
#mkdir $BCK_PATH

# TODO
# --master-data=2 : Adding locks to backup
for dbname in ${DB_NAME[@]};
do
  $BIN_PATH/mysqldump --opt --single-transaction --master-data=2 -u$DB_USER -p$DB_PASS -h$DB_HOST ${dbname} > $BCK_PATH/db_${dbname}_`date +%F`.sql
done

# Delete file 30 day ago
find /home/mysql_backup/ -mtime +30 -name "*.sql" -exec rm -rf {} \;

##===End=======================================================================================================================================


